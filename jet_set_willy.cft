#
# Control file template for Jet Set Willy
#
;
; SkoolKit control file for Jet Set Willy.
;
; Room descriptions based on reference material from Andrew Broad
; <http://webspace.webring.com/people/ja/andrewbroad/> and J. G. Harston
; <http://mdfs.net/Software/JSW/Docs/>.
;

; @start:32768
; @org:32768=32768
g 32768 Room buffer
D 32768 Initialised upon entry to a room by the routine at #R35068.
S 32768,128 Room layout (used by the routines at #R35068 and #R36203)
S 32896,32 Room name (used by the routine at #R35068)
S 32928,9 Background tile (used by the routines at #R36147, #R36307 and #R38430, and also by the unused routine at #R37819)
S 32937,9 Floor tile (used by the routine at #R36147)
S 32946,9 Wall tile (used by the routines at #R36147, #R36307 and #R36564)
S 32955,9 Nasty tile (used by the routines at #R36147, #R36307 and #R38430)
S 32964,9 Ramp tile (used by the routines at #R36147, #R36203, #R36564 and #R38344)
S 32973,9 Conveyor tile (used by the routines at #R36147, #R36203 and #R36564)
S 32982,4 Conveyor definition (used by the routines at #R36564 and #R38137)
S 32986,4 Ramp definition (used by the routines at #R36203, #R36564 and #R38344)
B 32990,1 Border colour (used by the routine at #R35068)
S 32991,2 Unused
S 32993,8 Object graphic (used by the routine at #R37841)
B 33001,1 Room to the left (used by the routine at #R38026)
B 33002,1 Room to the right (used by the routine at #R38046)
B 33003,1 Room above (used by the routines at #R37310 and #R38064)
B 33004,1 Room below (used by the routine at #R38098)
S 33005,3 Unused
S 33008,16 Guardian definitions (used by the routine at #R35068)
g 33024 Guardian buffer
D 33024 Used by the routines at #R35068, #R37056 and #R37310.
S 33024,64
B 33088 Terminator
s 33089
w 33280 Screen buffer address lookup table
D 33280 Used by the routines at #R35914, #R37310 and #R38455.
W 33280,256,16
b 33536 Rope animation table
D 33536 Used by the routine at #R37310.
B 33536,256,16
c 33792 The game has just loaded
D 33792 After the game has loaded, this is where it all starts.
  33792 Disable interrupts
  33793,11 Place the address of the routine at #R34463 on the stack
  33804,9 Set #REGhl=34048 in a roundabout way
  33813,10 Read through addresses 34048-65535, without changing their contents; perhaps this code was once used to descramble the contents of pages 133-255, but now all it does is introduce a pause of about 0.47s before displaying the code entry screen
  33823 Make an indirect jump to #R34463
g 33824 Current room number
D 33824 Used by the routines at #R34762, #R35068, #R35591, #R37310, #R37841, #R38026, #R38046, #R38064, #R38098, #R38196, #R38276, #R38298 and #R38455.
b 33825 Conveyor data
D 33825 Used by the routine at #R36564.
b 33841 Triangle UDGs
D 33841 Used by the routine at #R34762.
D 33841 #UDGTABLE {{ #UDG33841,56(triangle0) | #UDG33849,56(triangle1) | #UDG33857,56(triangle2) | #UDG33865,56(triangle3) }} TABLE#
t 33873 'AIR'
D 33873 This message is not used.
t 33876 '+++++ Press ENTER to Start +++++'
D 33876 Used by the routine at #R34762.
t 33908 '#SPACE(2)JET-SET WILLY by Matthew Smith...'
D 33908 Used by the routine at #R34762.
B 33942 #CHR169
T 33943
T 33980
T 34024
T 34050
T 34100
t 34132 'Items collected 000 Time 00:00 m'
D 34132 Used by the routine at #R35068.
t 34164 'GameOver'
D 34164 Used by the routine at #R35914.
t 34172 '000'
D 34172 Used by the routines at #R34762, #R35245 and #R37841.
t 34175 ' 7:00a'
D 34175 Used by the routines at #R34762 and #R35245.
t 34181 ' 7:00a'
D 34181 Copied by the routine at #R34762 to #R34175.
t 34187 'Enter Code at grid location#SPACE5'
D 34187 Used by the routine at #R34463.
t 34219 'Sorry, try code at location#SPACE5'
D 34219 Used by the routine at #R34463.
g 34251 Minute counter
D 34251 Used by the routines at #R34762, #R35245, #R37841, #R38196, #R38276 and #R38298.
g 34252 Lives remaining
D 34252 Used by the routines at #R34762, #R35211, #R35591 and #R35841.
g 34253 Screen flash counter
D 34253 Unused and always zero; the code at #R35339 makes the screen flash in Manic Miner fashion if this address holds a non-zero value.
g 34254 Kempston joystick indicator
D 34254 Initialised by the routine at #R34762, and checked by the routines at #R36564 and #R38601. Holds 1 if a joystick is present, 0 otherwise.
g 34255 Willy's pixel y-coordinate
D 34255 Used by the routines at #R34762, #R35245, #R35591, #R36307, #R36564, #R37310, #R38064, #R38098, #R38196, #R38344 and #R38455.
g 34256 Various flags
D 34256 #TABLE(default,centre) {{ =h Bit(s) | =h Meaning | =h Used by }} {{ 0 | Direction Willy is facing (reset=right, set=left) | #R36564, #R38455 }} {{ 1 | Unknown | #R36564, #R37310 }} {{ 2-7 | Unused | }} TABLE#
g 34257 Airborne status indicator
D 34257 Used by the routines at #R34762, #R35591, #R36307, #R36564, #R37046, #R37310, #R38064, #R38098 and #R38344.
g 34258 Willy's animation frame
D 34258 Used by the routines at #R35245, #R36564, #R37310, #R38344 and #R38455.
g 34259 Willy's coordinates in the attribute buffer at 23552
D 34259 Used by the routines at #R34762, #R36307, #R36564, #R37310, #R38026, #R38046, #R38064, #R38098, #R38196, #R38276, #R38344 and #R38455.
g 34261 Jumping animation counter
D 34261 Used by the routines at #R36307 and #R36564.
g 34262 Rope status indicator
D 34262 Initialised by the routine at #R35068, checked by the routine at #R36307, and checked and set by the routines at #R36564 and #R37310.
g 34263 Willy's state on entry to the room
D 34263 Initialised by the routine at #R35068, and copied back into #LINK:GameStatusBuffer#34255(34255-34261) by the routine at #R35841.
g 34270 256 minus the number of objects remaining
D 34270 Used by the routines at #R34762 and #R37841.
g 34271 Game mode indicator
D 34271 Used by the routines at #R34762, #R35245, #R36564, #R37841, #R38196, #R38276 and #R38298.
D 34271 #TABLE(default,centre) {{ =h Value | =h Meaning }} {{ 0 | Normal }} {{ 1 | All objects collected }} {{ 2 | Willy is running to the toilet }} {{ 3 | Willy's head is down the toilet }} TABLE#
g 34272 Inactivity timer
D 34272 Initialised by the routine at #R34762, and updated by the routines at #R35245, #R35591 and #R36564 (only when the in-game music is not playing).
g 34273 In-game music note index
D 34273 Initialised by the routine at #R34762, used by the routine at #R35211, and updated by the routine at #R35591.
g 34274 Sound flags
D 34274 #TABLE(default,centre) {{ =h Bit(s) | =h Meaning | =h Used by }} {{ 0 | Keypress flag (reset=H-ENTER being pressed, set=no key pressed) | #R34762, #R35591 }} {{ 1 | In-game music flag (reset=music on, set=music off) | #R35591 }} {{ 2-7 | Unused | }} TABLE#
g 34275 WRITETYPER key counter
D 34275 Used by the routines at #R35245 and #R35591.
g 34276 Temporary workspace
D 34276 Used by the routines at #R34499 and #R34620 to hold the entry code; also used by the routines at #R34762 and #R35914.
b 34277 WRITETYPER
D 34277 Used by the routine at #R35591.
B 34277,b2
B 34279,b2 W
B 34281,b2 R
B 34283,b2 I
B 34285,b2 T
B 34287,b2 E
B 34289,b2 T
B 34291,b2 Y
B 34293,b2 P
B 34295,b2 E
B 34297,b2 R
b 34299 Title screen tune data
D 34299 Used by the routine at #R34762.
B 34299,100,16
b 34399 In-game tune data
D 34399 Used by the routine at #R35591.
B 34399,64,16
c 34463 Give two chances to enter a correct code
D 34463 Used by the routine at #R33792.
  34463,13 Clear the display file and attribute file
  34476 Point #REGix at the message at #R34187 ("Enter Code at grid location#SPACE(5)")
  34480 Display the code entry screen and collect a four-digit code from the user
  34483 Start the game if the code is correct
  34486 Point #REGix at the message at #R34219 ("Sorry, try code at location#SPACE(5)")
  34490 Display the code entry screen and collect another four-digit code from the user
  34493 Start the game if the code is correct
  34496 Otherwise reset the machine
c 34499 Display the code entry screen
D 34499 Used by the routine at #R34463. Displays the code entry screen and waits for a code to be entered. Returns with the zero flag set if the code entered is correct.
R 34499 IX Address of the message to print (#R34187 or #R34219)
  34499,8 Print the message pointed to by #REGix at (8,0)
  34507,11 Print the graphic for the '1' key at (10,2)
  34518,6 Print the graphic for the '2' key at (10,5)
  34524,6 Print the graphic for the '3' key at (10,8)
  34530,6 Print the graphic for the '4' key at (10,11)
  34536,11 Copy the 128 attribute bytes from #R39808 to the screen (lines 8, 9, 10 and 11)
  34547 Collect the LSB of the system variable FRAMES
  34550,5 Add 37 to this value and replace it; this ensures that the value collected on the second pass through this routine is different from the value collected on the first pass
  34555 Is the value between 0 and 178?
  34557 Jump if so
  34559 Otherwise subtract 180; note that if the original value of the LSB of the system variable FRAMES was 142, this leaves #REGa holding 255, which is a #BUG#invalidGridLocation
  34561 Now #REGl holds either 255 or some number between 0 and 178
  34562 Point #REGhl at one of the entries in the table at #R40448 (or at 40703 if #REGl=255)
  34564 Pick up the table entry
  34565 Add #REGl to obtain the actual code
  34566 Store the code at #R34276
  34569 Copy the code index to #REGc; this will be used to compute the grid location
  34570,13 Calculate the ASCII code of the grid location number (0-9) in #REGe
  34583,7 Print the grid location number at (8,30)
  34590,3 Calculate the ASCII code of the grid location letter (A-R) in #REGa
  34593,6 Print the grid location letter at (8,29)
D 34599 Here we enter a loop that prints a 2x2 coloured block at (10,16), (10,19), (10,22) or (10,25) whenever '1', '2', '3' or '4' is pressed, or returns to the calling routine at #R34463 if ENTER is pressed.
  34599 Point #REGix at the attribute file location of the first coloured block at (10,16)
  34603 Print a coloured block when '1', '2', '3' or '4' is pressed, or return to #R34463 if ENTER is pressed
  34606,6 Move #REGix along to the location of the next coloured block
  34612,4 Have we just printed the fourth coloured block at (10,25)?
  34616 If not, jump back to print the next one
  34618 Otherwise rewind #REGix to the location of the first coloured block
c 34620 Read the keyboard during code entry
R 34620 IX Attribute file address of the flashing 2x2 block
D 34620 Used by the routine at #R34499. Waits for '1', '2', '3', '4' or ENTER to be pressed and either prints a coloured block or validates the entered code. Returns to the routine at #R34463 if ENTER is being pressed, with the zero flag reset if the entered code is correct.
  34620,5 Read keys 1-2-3-4-5
  34625,4 Is '1', '2', '3' or '4' (still) being pressed?
  34629 Jump back if so
  34631,4 Read keys H-J-K-L-ENTER
  34635 Is ENTER being pressed?
  34637,2 Jump if not
  34639 Pick up the attribute byte of the fourth 2x2 block at (10,25)
  34642,4 Has the fourth digit been entered yet?
  34646 Jump if not
D 34648 We have four coloured blocks, and ENTER is being pressed. Time to validate the entered code.
  34648,8 Compute bits 0 and 1 of the entered code from the attribute byte of the fourth coloured block at (10,25) and store them in #REGc
  34656,10 Compute bits 4 and 5 of the entered code from the attribute byte of the second coloured block at (10,19) and store them in #REGc (alongside bits 0 and 1)
  34666,10 Compute bits 2 and 3 of the entered code from the attribute byte of the third coloured block at (10,22) and store them in #REGc (alongside bits 0, 1, 4 and 5)
  34676,10 Compute bits 6 and 7 of the entered code from the attribute byte of the first coloured block at (10,16) in #REGa
  34686 Drop the return address from the stack
  34687 Merge bits 0-5 of the entered code into #REGa; now #REGa holds all 8 bits of the entered code
  34688 Point #REGhl at #R34276 (where the correct entry code is stored)
  34691 Set the zero flag if the entered code matches
  34692 Return to the routine at #R34463
D 34693 Here we check whether '1', '2', '3' or '4' is being pressed.
  34693,16 Make sure the current 2x2 block is flashing
  34709,5 Read keys 1-2-3-4-5
  34714,2 Keep only bits 0-3 (keys 1-2-3-4)
  34716 #REGe=8 (INK 0: PAPER 1)
  34718 Is '1' alone being pressed?
  34720 Jump if so
  34722 #REGe=16 (INK 0: PAPER 2)
  34724 Is '2' alone being pressed?
  34726 Jump if so
  34728 #REGe=24 (INK 0: PAPER 3)
  34730 Is '3' alone being pressed?
  34732 Jump if so
  34734 #REGe=32 (INK 0: PAPER 4)
  34736 Is '4' alone being pressed?
  34738,3 If not, jump back to check the ENTER key
D 34741 Exactly one of the number keys '1', '2', '3' or '4' is being pressed. #REGe holds the corresponding attribute byte to use for the coloured block.
  34741,12 Set the colour of the 2x2 block (no longer flashing)
  34753,8 Pause for about 0.02s
c 34762 Display the title screen and play the theme tune
  35043,5 Read keys H-J-K-L-ENTER and 6-7-8-9-0
  35048 Keep only bit 0 of the result (ENTER, 0)
  35050 Was ENTER or 0 pressed?
  35052,2 Jump if so to start the game
c 35068 Start the game
c 35211 Draw remaining lives
c 35245 Main loop (1)
  35499,5 Read keys SHIFT-Z-X-C-V
  35504 Save the result in #REGe
  35505,4 Read keys B-N-M-SS-SPACE
  35509 Combine the results
  35510 Are SHIFT and SPACE being pressed?
  35512,3 Jump if so to quit the game
  35524,4 Read keys A-S-D-F-G
  35528,4 Are any of these keys being pressed?
  35532,2 Jump if not
  35537,4 Read every half-row of keys except A-S-D-F-G
  35541,4 Are any of these keys being pressed?
  35545,2 Jump if so
c 35563 Cycle the INK and PAPER colours
c 35591 Main loop (2)
  35620 Read keys H-J-K-L-ENTER
  35622,4 Are any of these keys being pressed?
  35626,2 Jump if not
  35696,5 Read keys 6-7-8-9-0
  35701 Is '9' being pressed?
  35703 Jump if not
  35706 Keep only bit 4 (corresponding to the '6' key)
  35708 Flip bit 4
  35710 Move it into bit 5
  35711,1 Now bit 5 of #REGd is set if '6' is being pressed
  35720,5 Read keys 1-2-3-4-5
  35725,3 Keep only bits 0-4 and flip them
  35728 Copy bit 5 of #REGd into #REGa; now #REGa holds the number of the room to teleport to
  35729,3 Store the room number at #R33824
  35772,5 Read keys Q-W-E-R-T
  35784 Are any of these keys (Q-W-E-R-T) being pressed?
  35786,3 If not, jump back to the start of the main loop
  35802,4 Read keys Y-U-I-O-P
  35813 Are any of these keys (Y-U-I-O-P) being pressed?
  35815,3 If not, jump back to the start of the main loop
c 35841 Lose a life
c 35914 Display the game over sequence
c 36147 Draw the current room to the screen buffer at 28672
c 36203 Fill the buffer at 24064 with attribute bytes for the current room
c 36288 Copy a room attribute byte into the buffer at 24064
c 36307 Move Willy (1)
c 36564 Move Willy (2)
  36602,5 Read keys Y-U-I-O-P
  36621,5 Read keys Q-W-E-R-T
  36634,4 Read keys 1-2-3-4-5 and 6-7-8-9-0
  36643,4 Read keys 6-7-8-9-0
  36651,2 Read keys 6-7-8-9-0
  36658 Collect the Kempston joystick indicator from #R34254
  36661 Is the joystick connected?
  36662 Jump if not
  36664,5 Collect input from the joystick
  36669,2 Keep only bits 0 (right) and 1 (left)
  36717,5 Read keys SHIFT-Z-X-C-V and B-N-M-SS-SPACE
  36722,4 Are any of these keys being pressed?
  36726 Jump if so
  36728,4 Read keys 6-7-8-9-0
  36732 Is '0' being pressed?
  36734,2 Jump if so
  36736 Collect the Kempston joystick indicator from #R34254
  36739 Is the joystick connected?
  36740 Jump if not
  36742,5 Collect input from the joystick
  36747 Is the fire button being pressed?
  36749,2 Jump if not
D 36751 A jump key or the fire button is being pressed. Time to make Willy jump.
c 37046 Kill Willy
c 37056 Move guardians
c 37310 Draw guardians to the screen buffer at 24576
u 37819 Unused routine
C 37819
c 37841 Draw objects
c 37974 Draw a sprite
c 38026 Move Willy into the room to the left
c 38046 Move Willy into the room to the right
c 38064 Move Willy into the room above
c 38098 Move Willy into the room below
c 38137 Move conveyors
c 38196 Deal with special rooms (Master Bedroom, The Bathroom)
c 38276 Check whether Willy has reached the toilet
c 38298 Animate the toilet in The Bathroom
c 38344 Set the attribute bytes for Willy's sprite in the buffer at 23552
c 38430 Set the attribute byte for a tile of Willy's sprite
c 38455 Draw Willy to the screen buffer at 24576
c 38528 Print a message
c 38545 Print a single character
c 38562 Play the theme tune
c 38601 Check whether ENTER, 0 or the fire button is being pressed
D 38601 Used by the routine at #R38562. Returns with the zero flag reset if ENTER, 0 or the fire button on the joystick is being pressed.
  38601 Collect the Kempston joystick indicator from #R34254
  38604 Is the joystick connected?
  38605 Jump if not
  38607 Collect input from the joystick
  38609 Is the fire button being pressed?
  38611 Return (with the zero flag reset) if so
  38612,5 Read keys H-J-K-L-ENTER and 6-7-8-9-0
  38617 Keep only bit 0 of the result (ENTER, 0)
  38619,2 Reset the zero flag if ENTER or 0 is being pressed
c 38622 Play an intro message sound effect
u 38644 Unused routine
C 38644
C 38668 Prepare #REGbc for reading keys SHIFT-Z-X-C-V
C 38671 Read these keys
C 38673 Is 'X' being pressed?
C 38675 Jump if so to reset the machine
C 38678 Otherwise jump back to read the keyboard again
s 38680
b 38912 Attributes for the top two-thirds of the title screen
D 38912 Used by the routine at #R34762.
B 38912,512,16
b 39424 Attributes for the bottom third of the screen during gameplay
D 39424 Used by the routines at #R35068 and #R35591.
B 39424,256,16
b 39680 Number key graphics
D 39680 Used by the routine at #R34499.
D 39680 #UDGTABLE {{ #UDGARRAY2,65,,2;39680;39681,121;39696;39697(number_key0) | #UDGARRAY2,66,,2;39712;39713,122;39728;39729(number_key1) | #UDGARRAY2,3,,2;39744;39745,59;39760;39761(number_key2) | #UDGARRAY2,4,,2;39776;39777,60;39792;39793(number_key3) }} TABLE#
B 39680,128,16
b 39808 Attributes for the code entry screen
D 39808 Used by the routine at #R34499.
B 39808,128,16
u 39936 Source code remnants
D 39936 The source code here corresponds to the code at #R35545.
T 39936 [JR ]NZ,ENDPAUSE
M 39947,9 INC E
W 39947
B 39949
T 39950,6,B1:3:B1:1
M 39956,15 JR NZ,PAUSE
W 39956
B 39958
T 39959,12,B1:2:B1:8
M 39971,9 INC D
W 39971
B 39973
T 39974,6,B1:3:B1:1
M 39980,15 JR NZ,PAUSE
W 39980
B 39982
T 39983,12,B1:2:B1:8
M 39995,5 C[P 10]
W 39995
B 39997
T 39998,2,B1:1
b 40000 Foot/barrel graphic data
D 40000 Used by the routine at #R35914 to display the game over sequence.
D 40000 The foot also appears as a guardian in #R56576(The Nightmare Room).
{foot}
D 40032 The barrel also appears as a guardian in #R54272(Ballroom East) and #R57856(Top Landing).
{barrel}
b 40064 Maria sprite graphic data
D 40064 Used by the routine at #R38196 to draw Maria in #R58112(Master Bedroom).
D 40064 Maria also appears as a guardian in #R56576(The Nightmare Room).
{maria}
b 40192 Willy sprite graphic data
D 40192 Used by the routines at #R35211 and #R38455.
{willy}
b 40448 Codes
D 40448 Used by the routine at #R34499.
{codes}
u 40627
C 40627
S 40704
b 40960 Guardian definitions
D 40960 Used by the routine at #R35068.
{guardian_defs}
D 41856 The next 127 bytes are unused.
B 41856,127,16
b 41983 Index of first object
D 41983 Used by the routines at #R34762 and #R37841.
b 41984 Object table
D 41984 Used by the routines at #R34762 and #R37841.
D 41984 The location of object N (173<=N<=255) is defined by the pair of bytes at addresses 41984+N and 42240+N. The meaning of the bits in each byte-pair is as follows:
D 41984 #TABLE(default,centre) {{ =h Bit(s) | =h Meaning }} {{ 15 | Most significant bit of the y-coordinate }} {{ 14 | Collection flag (reset=collected, set=uncollected) }} {{ 8-13 | Room number }} {{ 5-7 | Least significant bits of the y-coordinate }} {{ 0-4 | x-coordinate }} TABLE#
{object_table}
b 42496 Toilet graphics
D 42496 Used by the routine at #R38298.
{toilet}
u 42624
B 42624,128,16
S 42752
b 43776 Guardian graphics
D 43776 Used by the routine at #R37310.
{guardians}
{rooms}
u 64768 Unused TRS-DOS code
C 64768
B 65005,136,16
T 65141
C 65147
B 65203,2
T 65205
C 65236
B 65410,16,8
C 65426
S 65517
