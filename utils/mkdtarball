#!/usr/bin/env bash

# Abort on any error
set -e

usage() {
  cat <<EOF
Usage: $(basename $0) [options]

  Create a release tarball and zip archive of the disassembly.

Options:
  -h  Show this help
EOF
  exit 1
}

readme() {
  cat <<EOF
The HTML disassembly in this archive was built from the source files in the
'src' subdirectory using version $SK_VERSION of SkoolKit.

SkoolKit can be obtained from the following locations:

  - http://pyskool.ca/?page_id=177
  - https://launchpad.net/skoolkit

The HTML disassembly can be built from the source files by following these
steps:

1. Download and unpack SkoolKit $SK_VERSION.

2. Copy 'jetsetwilly.py' from the 'skoolkit' subdirectory in this archive to
   the directory where SkoolKit was unpacked.

3. Copy the 'src' subdirectory into the directory where SkoolKit was unpacked.

4. Change to the directory where SkoolKit was unpacked and run this command:

   $ ./skool2html.py -W jetsetwilly.JetSetWillyHtmlWriter src/jet_set_willy.ref
EOF
}

asm_readme() {
  cat <<EOF
ASM
===
An ASM version of the disassembly in this archive can be built from the source
files in the 'src' subdirectory using version $SK_VERSION of SkoolKit.

SkoolKit can be obtained from the following locations:

  - http://pyskool.ca/?page_id=177
  - https://launchpad.net/skoolkit

Before attempting to build an ASM file, follow these steps:

1. Download and unpack SkoolKit $SK_VERSION.

2. Copy 'jetsetwilly.py' from the 'skoolkit' subdirectory in this archive to
   the directory where SkoolKit was unpacked.

3. Copy the 'src' subdirectory into the directory where SkoolKit was unpacked.

4. Change to the directory where SkoolKit was unpacked.

SkoolKit $SK_VERSION supports the following assemblers:

  - pasmo (v0.5.3)
  - SjASMPlus (v1.07-rc7)
  - z80asm, the assembler distributed with z88dk (v1.8)

The following sections give examples of how to use each of these assemblers to
create binary (raw memory) files or tape files that can be used with an
emulator.

pasmo
=====
First, create an ASM version of the disassembly:

  $ ./skool2asm.py src/jet_set_willy.skool > jet_set_willy.asm

Then use pasmo to create a binary file thus:

  $ pasmo jet_set_willy.asm jet_set_willy.bin

To create a TAP file from jet_set_willy.bin, use the bin2tap.py utility,
included with SkoolKit:

  $ ./bin2tap.py jet_set_willy.bin

The resultant TAP file, jet_set_willy.tap, can be loaded into an emulator, and
the game will start automatically.

SjASMPlus
=========
First, create an ASM version of the disassembly:

  $ ./skool2asm.py src/jet_set_willy.skool > jet_set_willy.asm

Then create a file called jet_set_willy.sjasm with the following contents:

; SjASMPlus source file for jet_set_willy.asm
  device zxspectrum48
  include jet_set_willy.asm
  savebin "jet_set_willy.bin",32768,32768

Run sjasmplus on this source file:

  $ sjasmplus jet_set_willy.sjasm

and a binary file called jet_set_willy.bin will be created. To create a TAP
file from jet_set_willy.bin, use the bin2tap.py utility, included with
SkoolKit:

  $ ./bin2tap.py jet_set_willy.bin

The resultant TAP file, jet_set_willy.tap, can be loaded into an emulator, and
the game will start automatically.

z80asm
======
First, create an ASM version of the disassembly:

  $ ./skool2asm.py src/jet_set_willy.skool > jet_set_willy.asm

Then a binary file can be created thus:

  $ z80asm -r8000 -b jet_set_willy.asm

To create a TAP file from this binary file, use the bin2tap.py utility,
included with SkoolKit:

  $ ./bin2tap.py jet_set_willy.bin

The resultant TAP file, jet_set_willy.tap, can be loaded into an emulator, and
the game will start automatically.
EOF
}

while [ -n "$1" ]; do
  case "$1" in
    -*) usage ;;
  esac
  shift
done

if [ -z "$JETSETWILLY_HOME" ]; then
  echo "Error: JETSETWILLY_HOME not defined."
  exit 1
fi
if [ ! -d "$JETSETWILLY_HOME" ]; then
  echo "Error: directory not found: $JETSETWILLY_HOME"
  exit 1
fi

JSWZ80=$JETSETWILLY_HOME/build/jet_set_willy.z80

if [ ! -f skool2html.py ]; then
  echo "Error: skool2html.py not found."
  exit 1
fi
SK_VERSION=$(./skool2html.py -V 2>&1 | cut -f2 -d' ')

cp -p $JETSETWILLY_HOME/skoolkit/jetsetwilly.py .
rm -rf src
mkdir src
cp -p $JETSETWILLY_HOME/{jet_set_willy.ref,COPYING} src
cp -p $JETSETWILLY_HOME/resources/jet_set_willy*.css src

VERSION=$(grep ^Release= src/jet_set_willy.ref | grep -o '20.\{6\}')

if [ -z "$VERSION" ]; then
  echo "Error: could not find version number in src/jet_set_willy.ref"
  exit 1
fi

DISTDIR=dist
PKGNAME=jsw-disassembly-$VERSION
ABSDIR=${DISTDIR}/${PKGNAME}
[ -e $ABSDIR ] && rm -rf $ABSDIR

if [ ! -f $JSWZ80 ]; then
  echo -n "Writing $JSWZ80..."
  if ./tap2sna.py -d $(dirname $JSWZ80) $JETSETWILLY_HOME/jet_set_willy.t2s &> /dev/null; then
    echo "done"
  else
    echo "failed"
    exit 1
  fi
fi

echo -n "Writing control file..."
$JETSETWILLY_HOME/utils/jsw2ctl.py $JSWZ80 > jet_set_willy.ctl
echo "done"

echo -n "Writing skool file..."
./sna2skool.py -c jet_set_willy.ctl $JSWZ80 > src/jet_set_willy.skool
echo "done"

echo -n "Writing disassembly..."
./skool2html.py -W jetsetwilly.JetSetWillyHtmlWriter -q -d ${ABSDIR} src/jet_set_willy.ref
echo "done"
mv ${ABSDIR}/{jet_set_willy,html}

echo -n "Copying source files and SkoolKit module..."
cp -a src ${ABSDIR}
SKMODDIR=${ABSDIR}/skoolkit
mkdir $SKMODDIR
cp -p COPYING jetsetwilly.py $SKMODDIR
readme > ${ABSDIR}/readme.txt
asm_readme > ${ABSDIR}/asm.txt
echo "done"

cd $DISTDIR

echo "Creating ${DISTDIR}/${PKGNAME}.tar.xz"
tar acf ${PKGNAME}.tar.xz $PKGNAME

echo "Creating ${DISTDIR}/${PKGNAME}.zip"
zip -9qr ${PKGNAME}.zip $PKGNAME
