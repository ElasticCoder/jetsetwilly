; Copyright 2012-2016 Richard Dymond (rjdymond@gmail.com)

[Config]
HtmlWriterClass=:jetsetwilly.JetSetWillyHtmlWriter
RefFiles=bugs.ref;changelog.ref;facts.ref;pokes.ref
GameDir=jet_set_willy

[Game]
Game=Jet Set Willy
Logo=#LOGO{4,4,200,120}(/images/logo.png|Jet Set Willy)
StyleSheet=skoolkit.css;jsw.css
Copyright=&#169; 1984 Software Projects Ltd. &#169; 2016 Richard Dymond.
Release=The complete Jet Set Willy RAM disassembly YYYYMMDD
LinkInternalOperands=1

[ImageWriter]
DefaultAnimationFormat=gif

[Font]
32=0000000000000000
39=0008100000000000
46=0000000000181800
65=003C42427E424200
66=007C427C42427C00
67=003C424040423C00
68=0078444242447800
69=007E407C40407E00
70=007E407C40404000
71=003C42404E423C00
72=0042427E42424200
73=003E080808083E00
74=0002020242423C00
75=0044487048444200
76=0040404040407E00
77=0042665A42424200
78=004262524A464200
79=003C424242423C00
80=007C42427C404000
81=003C4242524A3C00
82=007C42427C444200
83=003C403C02423C00
84=00FE101010101000
85=0042424242423C00
87=00424242425A2400
89=0082442810101000
91=000E080808080E00
97=000038043C443C00
98=0020203C22223C00
99=00001C2020201C00
100=0004043C44443C00
101=0000384478403C00
102=000C101810101000
103=00003C44443C0438
104=0040407844444400
105=0010003010103800
107=0020283030282400
108=0010101010100C00
109=0000685454545400
110=0000784444444400
111=0000384444443800
112=0000784444784040
114=00001C2020202000
115=0000384038047800
116=0010381010100C00
117=0000444444443800
118=0000444428281000
119=0000445454542800
121=00004444443C0438

[PageHeaders]
Asm-t=Messages

[Index:DataTables:Data tables and buffers]
GameStatusBuffer
Rooms
Items
Entity definitions
Codes

[Index:Reference:Reference]
Changelog
Glossary
Facts
Bugs
Pokes
Credits

[Paths]
Credits=reference/credits.html
Rooms=tables/rooms.html
Codes=tables/codes.html

[MemoryMap:UnusedMap]
Intro=#INCLUDE1(UnusedMapIntro)

[UnusedMapIntro]
In addition to the entries in the table below, the following embedded sections
of code and data are unused:

#LIST
{ The entries at #R33622(#N33622-#N33663) and #R33750(#N33750-#N33791) in the
  rope animation table (84 bytes) }
{ The section of code at #R35345(#N35345-#N35365) in the main loop (21 bytes) }
{ Entity definitions #ed112-#ed126 at #R41856 (120 bytes) }
{ Slots 0-172 at #R41984#41984 and #R42240 in the item table (346 bytes) }
{ Pages #R45312(#N177) and #R45824(#N179) in the guardian graphic data (512
  bytes) }
{ Room #R61184(#N(47,,,1)(0x)) (256 bytes) }
LIST#

[PageContent:Rooms]
#CALL:rooms()

[Page:Items]
Content=asm/41984.html

[Page:Entity definitions]
Content=asm/40960.html

[PageContent:Codes]
#CALL:codes()

[PageContent:Credits]
<div class="box box-1">
This disassembly would have taken a lot longer to finish if it weren't for the
research and documentation already done and made available by:
#LIST
{ <a href="http://webspace.webring.com/people/ja/andrewbroad/">Andrew Broad</a>
  (and Carl Woffenden) }
{ <a href="http://mdfs.net/Software/JSW/Docs/">J. G. Harston</a> }
LIST#
In particular, their partial disassemblies, bug descriptions and room format
descriptions were of great help.
</div>

[Glossary:Animation frame index mask]
The animation frame index mask for a <a href="#guardian">guardian</a> is found
in bits 5-7 of byte 1 of its buffer (see #R33024) while it is on-screen, having
been copied there from the corresponding <a href="#entity_definition">entity
definition</a> (see #R40960). The mask determines the animation frames that the
guardian's sprite cycles through. If 'B' is the guardian's base frame (0-7),
then its sprite will cycle through animation frames as follows, where '|'
denotes a bitwise OR operation (see #R37393):

#TABLE(boxData,centre)
{ =h Mask | =h Frames }
{ 000 | B (1 frame) }
{ 001 | B, B|1 (1 or 2 distinct frames) }
{ 010 | B, B, B|2, B|2 (1 or 2 distinct frames) }
{ 011 | B, B|1, B|2, B|3 (1, 2 or 4 distinct frames) }
{ 100 | B, B, B, B, B|4, B|4, B|4, B|4 (1 or 2 distinct frames) }
{ 101 | B, B|1, B, B|1, B|4, B|5, B|4, B|5 (1, 2 or 4 distinct frames) }
{ 110 | B, B, B|2, B|2, B|4, B|4, B|6, B|6 (1, 2 or 4 distinct frames) }
{ 111 | B, B|1, B|2, B|3, B|4, B|5, B|6, B|7 (1, 2, 4 or 8 distinct frames) }
TABLE#

For example, if a guardian's base frame is 2 and its animation frame index mask
is 011, then its sprite will cycle through frames 2, 2|1, 2|2 and 2|3 (i.e.
frames 2 and 3).

Note that the animation frame masks 100, 101 and 110 are not used by any
guardians in the game, and no guardian has a base frame of 7.

[Glossary:Entity]
A guardian, arrow or rope.

[Glossary:Entity definition]
One of the 128 8-byte blocks located at #R40960 onwards. Each one defines the
location and movement characteristics of a guardian, arrow or rope.

[Glossary:Entity specification]
One of the eight pairs of bytes at the end of a room definition (e.g. at
#R53488). Each one specifies a guardian, arrow or rope present in the room.

[Glossary:Guardian]
An inhabitant of a room that continuously moves left and right (horizontal
guardian) or up and down (vertical guardian) in a straight line, or
#FACT#guardianOrFixture(stays still). Contact with a guardian is fatal. The
graphic data for all the guardians in the game can be found at #R43776.

[Glossary:Nasty]
An immobile object drawn in a single cell as part of a room along with the
background, walls, floors, ramp and conveyor. Contact with a nasty is fatal.
Some examples are:

#UDGTABLE(gallery)
{ #R51968(The Hall)        | #UDG52156,68(nasty11) }
{ #R55552(Cold Store)      | #UDG55740,79(nasty25) }
{ #R61696(The Wine Cellar) | #UDG61884,70(nasty49) }
TABLE#
